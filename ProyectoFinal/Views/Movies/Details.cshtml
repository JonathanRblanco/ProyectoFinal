@using ProyectoFinal.DTO.Requests;
@using ProyectoFinal.DTO.Responses;
@model GetMovieByIdResponse
@{
    ViewData["MovieId"] = Model.Id;
}
<style>
    .movie-card {
        font: 14px/22px "Lato", Arial, sans-serif;
        padding: 40px 0;
        max-width: 1200px;
    }

    .container {
        margin: 0 auto;
        position: relative;
        max-height: 1200px;
    }

    .hero {
        height: 342px;
        margin: 0;
        position: relative;
        overflow: hidden;
        z-index: 1;
        border-top-left-radius: 5px;
        border-top-right-radius: 5px;
    }

        .hero:before {
            content: '';
            width: 100%;
            height: 100%;
            position: absolute;
            overflow: hidden;
            top: 0;
            left: 0;
            background: red;
            background: url("https://img.freepik.com/premium-vector/cinema-seamless-background-with-modern-linear-elements_651154-2122.jpg?w=2000");
            z-index: -1;
            transform: skewY(-2.2deg);
            transform-origin: 0 0;
            background-repeat: no-repeat;
            background-size: 100%;
        }

    .cover {
        position: absolute;
        top: 160px;
        left: 40px;
        z-index: 2;
    }

    .details {
        padding: 190px 0 0 280px;
    }

    .title1 {
        color: white;
        font-size: 35px;
        margin-bottom: 13px;
        position: relative;
        span

    {
        position: absolute;
        top: 3px;
        margin-left: 12px;
        background: #C4AF3D;
        border-radius: 5px;
        color: #544C21;
        font-size: 14px;
        padding: 0px 4px;
    }

    }

    .title2 {
        color: #C7C1BA;
        font-size: 23px;
        font-weight: 300;
        margin-bottom: 15px;
    }


    .likes {
        margin-left: 24px;
    }


        .likes:before {
            content: url("https://s3-us-west-2.amazonaws.com/s.cdpn.io/195612/icon_like.png");
            position: relative;
            top: 2px;
            padding-right: 7px;
        }

    .description {
        bottom: 0px;
        height: 100%;
        font-size: 16px;
        line-height: 26px;
    }

    .column1 {
        padding-left: 50px;
        padding-top: 120px;
        width: 220px;
        float: left;
        text-align: center;
    }

    fieldset, label {
        margin: 0;
        padding: 0;
    }

    /****** Style Star Rating Widget *****/

    .rating {
        border: none;
        float: left;
    }

        .rating > input {
            display: none;
        }

        .rating > label:before {
            margin: 5px;
            margin-top: 0;
            font-size: 1em;
            font-family: FontAwesome;
            display: inline-block;
            content: "\f005";
        }

        .rating > .half:before {
            content: "\f089";
            position: absolute;
        }

        .rating > label {
            color: #ddd;
            float: right;
        }

        /***** CSS Magic to Highlight Stars on Hover *****/

        .rating > input:checked ~ label, /* show gold star when clicked */
        .rating:not(:checked) > label:hover, /* hover current star */
        .rating:not(:checked) > label:hover ~ label {
            color: #FFD700;
        }
            /* hover previous stars in list */

            .rating > input:checked + label:hover, /* hover current star when changing rating */
            .rating > input:checked ~ label:hover,
            .rating > label:hover ~ input:checked ~ label, /* lighten current selection */
            .rating > input:checked ~ label:hover ~ label {
                color: #FFED85;
            }

    a[data-tooltip] {
        position: relative;
    }

        a[data-tooltip]::before,
        a[data-tooltip]::after {
            position: absolute;
            display: none;
            opacity: 0.85;
        }

        a[data-tooltip]::before {
            /*
                                       * using data-tooltip instead of title so we
                                       * don't have the real tooltip overlapping
                                       */
            content: attr(data-tooltip);
            background: #000;
            color: #fff;
            font-size: 13px;
            padding: 5px;
            border-radius: 5px;
            /* we don't want the text to wrap */
            white-space: nowrap;
            text-decoration: none;
        }

        a[data-tooltip]::after {
            width: 0;
            height: 0;
            border: 6px solid transparent;
            content: '';
        }

        a[data-tooltip]:hover::before,
        a[data-tooltip]:hover::after {
            display: block;
        }

        /** positioning **/

        /* top tooltip */
        a[data-tooltip][data-placement="top"]::before {
            bottom: 100%;
            left: 0;
            margin-bottom: 40px;
        }

        a[data-tooltip][data-placement="top"]::after {
            border-top-color: #000;
            border-bottom: none;
            bottom: 50px;
            left: 20px;
            margin-bottom: 4px;
        }

    .tag {
        background: #031926;
        border-radius: 10px;
        padding: 1px 1px;
        font-size: 25px;
        margin-right: 4px;
        line-height: 35px;
        color: white;
    }
</style>
<div class="movie-card">
    <div class="container">
        <img src="@Url.Action("GetImage","Image",new GetImageRequest{Id=Model.ImageId})" alt="cover" class="cover" style="width: 28%;height: 280px;" />
        <div class="hero">
            <div class="details">
                <div class="title1" style="margin-left:-7%;">@Model.Name</div>
                <fieldset class="rating" style="margin-left:-7%;">
                    <input type="radio" id="star5" name="rating" value="5" />
                    <label class="full" for="star5" title="Awesome - 5 stars"></label>
                    <input type="radio" id="star4half" name="rating" value="4 and a half" />
                    <label class="half" for="star4half" title="Pretty good - 4.5 stars"></label>
                    <input type="radio" id="star4" name="rating" value="4" checked />
                    <label class="full" for="star4" title="Pretty good - 4 stars"></label>
                    <input type="radio" id="star3half" name="rating" value="3 and a half" />
                    <label class="half" for="star3half" title="Meh - 3.5 stars"></label>
                    <input type="radio" id="star3" name="rating" value="3" />
                    <label class="full" for="star3" title="Meh - 3 stars"></label>
                    <input type="radio" id="star2half" name="rating" value="2 and a half" />
                    <label class="half" for="star2half" title="Kinda bad - 2.5 stars"></label>
                    <input type="radio" id="star2" name="rating" value="2" />
                    <label class="full" for="star2" title="Kinda bad - 2 stars"></label>
                    <input type="radio" id="star1half" name="rating" value="1 and a half" />
                    <label class="half" for="star1half" title="Meh - 1.5 stars"></label>
                    <input type="radio" id="star1" name="rating" value="1" />
                    <label class="full" for="star1" title="Sucks big time - 1 star"></label>
                    <input type="radio" id="starhalf" name="rating" value="half" />
                    <label class="half" for="starhalf" title="Sucks big time - 0.5 stars"></label>
                </fieldset>
                <br />
                <span class="tag" style="margin-left:-21%;">@Model.Clasification.Description</span>
            </div>
        </div>
        <div class="description">
            <div class="column1">
                <span class="tag" style="margin-left:-30%;">@Model.Gender.Description</span>
            </div>
        </div>
    </div>
</div>
<h3>Sinopsis</h3>
<p>@Model.Synopsis</p>
<h3>Actores</h3>
<p>@Model.Actors</p>
<h3>Director</h3>
<p>@Model.Director</p>
<h3>Opciones disponibles: </h3>
<table class="table" id="funciones">
    <tbody>
    </tbody>
</table>
<partial name="Reviews" view-data="ViewData" />
<script>
    $.get("@Url.Action("Get","Shows")?MovieId="+'@Model.Id'+'&OnlyValid='+'true', function (data) {
        // Creamos un objeto para almacenar el precio más bajo de cada cine
        var groupedData = data.reduce(function (acc, obj) {
            var cinemaName = obj.room.cinemaBranch.cinema.name;
            var price = obj.price;

            // Si ya existe una entrada para el cine en el acumulador, verificamos si el precio actual es menor y actualizamos los valores correspondientes
            if (acc[cinemaName]) {
                if (price < acc[cinemaName].price) {
                    acc[cinemaName] = { cinemaId: obj.room.cinemaBranch.cinema.id, price: price };
                }
            } else {
                // Si el cine no existe en el acumulador, lo agregamos con el precio actual
                acc[cinemaName] = { cinemaId: obj.room.cinemaBranch.cinema.id, price: price };
            }

            return acc;
        }, {});

        // Convertimos el objeto de grupos en un array de objetos
        var result = Object.keys(groupedData).map(function (cinemaName) {
            return { cinemaName: cinemaName, cinemaId: groupedData[cinemaName].cinemaId, lowestPrice: groupedData[cinemaName].price };
        });

        $.each(result, function (index, item) {
            // Creamos una nueva fila
            var row = $("<tr>");

            // Agregamos celdas a la fila con los valores de cada propiedad
            row.append($("<td>").text(item.cinemaName));
            row.append($("<td>").text('Desde:'));
            row.append($("<td>").text('$' + item.lowestPrice));

            // Creamos una celda para el botón
            var buttonCell = $("<td>");

            // Creamos el botón y le asignamos un evento de clic
            var button = $('<a href="@Url.Action("Index","CheckOut")?MovieId=' + @Model.Id+'&MovieImageId=' + @Model.ImageId+'&CinemaId=' + item.cinemaId + '" class="btn btn-outline-warning">').text("Elegir");
            button.click(function () {
                // Aquí puedes agregar la lógica para manejar el evento de clic del botón
                console.log("Botón clickeado para el cine con ID: " + item.cinemaId);
            });

            // Agregamos el botón a la celda
            buttonCell.append(button);

            // Agregamos la celda al final de la fila
            row.append(buttonCell);

            // Agregamos la fila al cuerpo de la tabla
            $("#funciones tbody").append(row);
        });
    })
</script>
